// <auto-generated />
using Itau.CoinExchange.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Itau.CoinExchange.Data.Migrations
{
    [DbContext(typeof(ItauCoinExchangeDbContext))]
    partial class ItauCoinExchangeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Itau.CoinExchange.Domain.Entities.Segments.Segment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discrimnator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Segments");

                    b.HasDiscriminator<string>("Discrimnator").HasValue("Segment");
                });

            modelBuilder.Entity("Itau.CoinExchange.Domain.Entities.Segments.Personnalites.Personnalite", b =>
                {
                    b.HasBaseType("Itau.CoinExchange.Domain.Entities.Segments.Segment");

                    b.HasDiscriminator().HasValue("Personnalite");

                    b.HasData(
                        new
                        {
                            Id = 1503778244L,
                            ExchangeRate = 0m,
                            Name = "Personnalite"
                        });
                });

            modelBuilder.Entity("Itau.CoinExchange.Domain.Entities.Segments.Privates.Private", b =>
                {
                    b.HasBaseType("Itau.CoinExchange.Domain.Entities.Segments.Segment");

                    b.HasDiscriminator().HasValue("Private");

                    b.HasData(
                        new
                        {
                            Id = 1522156775L,
                            ExchangeRate = 0m,
                            Name = "Private"
                        });
                });

            modelBuilder.Entity("Itau.CoinExchange.Domain.Entities.Segments.Varejos.Varejo", b =>
                {
                    b.HasBaseType("Itau.CoinExchange.Domain.Entities.Segments.Segment");

                    b.HasDiscriminator().HasValue("Varejo");

                    b.HasData(
                        new
                        {
                            Id = 1202857442L,
                            ExchangeRate = 0m,
                            Name = "Varejo"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
